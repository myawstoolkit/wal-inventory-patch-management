{
	"AWSTemplateFormatVersion": "2010-09-09",

	"Description": "OE Lab AWS CloudFormation Template: Sample template showing how to create a VPC and add EC2 instances with security groups and tagging. For use with OE Lab operations exercises. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",

	"Parameters": {
		"WorkloadName": {
			"Description": "The Name tag you wish to apply to the workload that will be created",
			"Type": "String",
			"MinLength": "1",
			"MaxLength": "256"
		},

		"InstanceProfile": {
			"Description": "Instance profile to assign to instances (not required).",
			"Type": "String"
		},

		"InstanceTypeWeb": {
			"Description": "WebServer EC2 instance type",
			"Type": "String",
			"Default": "t2.micro",
			"AllowedValues": ["t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.large", "m1.small"],
			"ConstraintDescription": "must be a valid EC2 instance type."
		},

		"InstanceTypeApp": {
			"Description": "AppServer EC2 instance type",
			"Type": "String",
			"Default": "t2.micro",
			"AllowedValues": [
				"t1.micro",
				"t2.nano",
				"t2.micro",
				"t2.small",
				"t2.medium",
				"t2.large",
				"m1.small",
				"m1.medium"
			],
			"ConstraintDescription": "must be a valid EC2 instance type."
		},

		"KeyName": {
			"Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
			"Type": "AWS::EC2::KeyPair::KeyName",
			"ConstraintDescription": "must be the name of an existing EC2 KeyPair."
		},

		"SourceLocation": {
			"Description": "The CIDR IP address range that can be used to SSH to the EC2 instances and access the servers via http",
			"Type": "String",
			"MinLength": "9",
			"MaxLength": "18",
			"Default": "0.0.0.0/0",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
			"ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
		}
	},

	"Mappings": {
		"Region2Examples": {
			"us-east-1": { "Examples": "https://s3.amazonaws.com/cloudformation-examples-us-east-1" },
			"us-west-2": {
				"Examples": "https://s3-us-west-2.amazonaws.com/cloudformation-examples-us-west-2"
			},
			"us-west-1": {
				"Examples": "https://s3-us-west-1.amazonaws.com/cloudformation-examples-us-west-1"
			},
			"eu-west-1": {
				"Examples": "https://s3-eu-west-1.amazonaws.com/cloudformation-examples-eu-west-1"
			},
			"eu-west-2": {
				"Examples": "https://s3-eu-west-2.amazonaws.com/cloudformation-examples-eu-west-2"
			},
			"eu-west-3": {
				"Examples": "https://s3-eu-west-3.amazonaws.com/cloudformation-examples-eu-west-3"
			},
			"eu-central-1": {
				"Examples": "https://s3-eu-central-1.amazonaws.com/cloudformation-examples-eu-central-1"
			},
			"ap-southeast-1": {
				"Examples": "https://s3-ap-southeast-1.amazonaws.com/cloudformation-examples-ap-southeast-1"
			},
			"ap-northeast-1": {
				"Examples": "https://s3-ap-northeast-1.amazonaws.com/cloudformation-examples-ap-northeast-1"
			},
			"ap-northeast-2": {
				"Examples": "https://s3-ap-northeast-2.amazonaws.com/cloudformation-examples-ap-northeast-2"
			},
			"ap-northeast-3": {
				"Examples": "https://s3-ap-northeast-3.amazonaws.com/cloudformation-examples-ap-northeast-3"
			},
			"ap-southeast-2": {
				"Examples": "https://s3-ap-southeast-2.amazonaws.com/cloudformation-examples-ap-southeast-2"
			},
			"ap-south-1": {
				"Examples": "https://s3-ap-south-1.amazonaws.com/cloudformation-examples-ap-south-1"
			},
			"us-east-2": {
				"Examples": "https://s3-us-east-2.amazonaws.com/cloudformation-examples-us-east-2"
			},
			"ca-central-1": {
				"Examples": "https://s3-ca-central-1.amazonaws.com/cloudformation-examples-ca-central-1"
			},
			"sa-east-1": {
				"Examples": "https://s3-sa-east-1.amazonaws.com/cloudformation-examples-sa-east-1"
			},
			"cn-north-1": {
				"Examples": "https://s3.cn-north-1.amazonaws.com.cn/cloudformation-examples-cn-north-1"
			},
			"cn-northwest-1": {
				"Examples": "https://s3.cn-northwest-1.amazonaws.com.cn/cloudformation-examples-cn-northwest-1"
			}
		},

		"AWSInstanceType2Arch": {
			"t1.micro": { "Arch": "HVM64" },
			"t2.nano": { "Arch": "HVM64" },
			"t2.micro": { "Arch": "HVM64" },
			"t2.small": { "Arch": "HVM64" },
			"t2.medium": { "Arch": "HVM64" },
			"t2.large": { "Arch": "HVM64" },
			"m1.small": { "Arch": "HVM64" },
			"m1.medium": { "Arch": "HVM64" },
			"m1.large": { "Arch": "HVM64" },
			"m1.xlarge": { "Arch": "HVM64" },
			"m2.xlarge": { "Arch": "HVM64" },
			"m2.2xlarge": { "Arch": "HVM64" },
			"m2.4xlarge": { "Arch": "HVM64" },
			"m3.medium": { "Arch": "HVM64" },
			"m3.large": { "Arch": "HVM64" },
			"m3.xlarge": { "Arch": "HVM64" },
			"m3.2xlarge": { "Arch": "HVM64" },
			"m4.large": { "Arch": "HVM64" },
			"m4.xlarge": { "Arch": "HVM64" },
			"m4.2xlarge": { "Arch": "HVM64" },
			"m4.4xlarge": { "Arch": "HVM64" },
			"m4.10xlarge": { "Arch": "HVM64" },
			"c1.medium": { "Arch": "HVM64" },
			"c1.xlarge": { "Arch": "HVM64" },
			"c3.large": { "Arch": "HVM64" },
			"c3.xlarge": { "Arch": "HVM64" },
			"c3.2xlarge": { "Arch": "HVM64" },
			"c3.4xlarge": { "Arch": "HVM64" },
			"c3.8xlarge": { "Arch": "HVM64" },
			"c4.large": { "Arch": "HVM64" },
			"c4.xlarge": { "Arch": "HVM64" },
			"c4.2xlarge": { "Arch": "HVM64" },
			"c4.4xlarge": { "Arch": "HVM64" },
			"c4.8xlarge": { "Arch": "HVM64" },
			"g2.2xlarge": { "Arch": "HVMG2" },
			"g2.8xlarge": { "Arch": "HVMG2" },
			"r3.large": { "Arch": "HVM64" },
			"r3.xlarge": { "Arch": "HVM64" },
			"r3.2xlarge": { "Arch": "HVM64" },
			"r3.4xlarge": { "Arch": "HVM64" },
			"r3.8xlarge": { "Arch": "HVM64" },
			"i2.xlarge": { "Arch": "HVM64" },
			"i2.2xlarge": { "Arch": "HVM64" },
			"i2.4xlarge": { "Arch": "HVM64" },
			"i2.8xlarge": { "Arch": "HVM64" },
			"d2.xlarge": { "Arch": "HVM64" },
			"d2.2xlarge": { "Arch": "HVM64" },
			"d2.4xlarge": { "Arch": "HVM64" },
			"d2.8xlarge": { "Arch": "HVM64" },
			"hi1.4xlarge": { "Arch": "HVM64" },
			"hs1.8xlarge": { "Arch": "HVM64" },
			"cr1.8xlarge": { "Arch": "HVM64" },
			"cc2.8xlarge": { "Arch": "HVM64" }
		},

		"AWSInstanceType2NATArch": {
			"t1.micro": { "Arch": "HVM64" },
			"t2.nano": { "Arch": "HVM64" },
			"t2.micro": { "Arch": "HVM64" },
			"t2.small": { "Arch": "HVM64" },
			"t2.medium": { "Arch": "HVM64" },
			"t2.large": { "Arch": "HVM64" },
			"m1.small": { "Arch": "HVM64" },
			"m1.medium": { "Arch": "HVM64" },
			"m1.large": { "Arch": "HVM64" },
			"m1.xlarge": { "Arch": "HVM64" },
			"m2.xlarge": { "Arch": "HVM64" },
			"m2.2xlarge": { "Arch": "HVM64" },
			"m2.4xlarge": { "Arch": "HVM64" },
			"m3.medium": { "Arch": "HVM64" },
			"m3.large": { "Arch": "HVM64" },
			"m3.xlarge": { "Arch": "HVM64" },
			"m3.2xlarge": { "Arch": "HVM64" },
			"m4.large": { "Arch": "HVM64" },
			"m4.xlarge": { "Arch": "HVM64" },
			"m4.2xlarge": { "Arch": "HVM64" },
			"m4.4xlarge": { "Arch": "HVM64" },
			"m4.10xlarge": { "Arch": "HVM64" },
			"c1.medium": { "Arch": "HVM64" },
			"c1.xlarge": { "Arch": "HVM64" },
			"c3.large": { "Arch": "HVM64" },
			"c3.xlarge": { "Arch": "HVM64" },
			"c3.2xlarge": { "Arch": "HVM64" },
			"c3.4xlarge": { "Arch": "HVM64" },
			"c3.8xlarge": { "Arch": "HVM64" },
			"c4.large": { "Arch": "HVM64" },
			"c4.xlarge": { "Arch": "HVM64" },
			"c4.2xlarge": { "Arch": "HVM64" },
			"c4.4xlarge": { "Arch": "HVM64" },
			"c4.8xlarge": { "Arch": "HVM64" },
			"g2.2xlarge": { "Arch": "HVMG2" },
			"g2.8xlarge": { "Arch": "HVMG2" },
			"r3.large": { "Arch": "HVM64" },
			"r3.xlarge": { "Arch": "HVM64" },
			"r3.2xlarge": { "Arch": "HVM64" },
			"r3.4xlarge": { "Arch": "HVM64" },
			"r3.8xlarge": { "Arch": "HVM64" },
			"i2.xlarge": { "Arch": "HVM64" },
			"i2.2xlarge": { "Arch": "HVM64" },
			"i2.4xlarge": { "Arch": "HVM64" },
			"i2.8xlarge": { "Arch": "HVM64" },
			"d2.xlarge": { "Arch": "HVM64" },
			"d2.2xlarge": { "Arch": "HVM64" },
			"d2.4xlarge": { "Arch": "HVM64" },
			"d2.8xlarge": { "Arch": "HVM64" },
			"hi1.4xlarge": { "Arch": "HVM64" },
			"hs1.8xlarge": { "Arch": "HVM64" },
			"cr1.8xlarge": { "Arch": "HVM64" },
			"cc2.8xlarge": { "Arch": "HVM64" }
		},

		"AWSRegionArch2AMI": {
			"us-east-1": { "HVM64": "ami-0ff8a91507f77f867", "HVMG2": "ami-0a584ac55a7631c0c" },
			"us-west-2": { "HVM64": "ami-a0cfeed8", "HVMG2": "ami-0e09505bc235aa82d" },
			"us-west-1": { "HVM64": "ami-0bdb828fd58c52235", "HVMG2": "ami-066ee5fd4a9ef77f1" },
			"eu-west-1": { "HVM64": "ami-047bb4163c506cd98", "HVMG2": "ami-0a7c483d527806435" },
			"eu-west-2": { "HVM64": "ami-f976839e", "HVMG2": "NOT_SUPPORTED" },
			"eu-west-3": { "HVM64": "ami-0ebc281c20e89ba4b", "HVMG2": "NOT_SUPPORTED" },
			"eu-central-1": { "HVM64": "ami-0233214e13e500f77", "HVMG2": "ami-06223d46a6d0661c7" },
			"ap-northeast-1": { "HVM64": "ami-06cd52961ce9f0d85", "HVMG2": "ami-053cdd503598e4a9d" },
			"ap-northeast-2": { "HVM64": "ami-0a10b2721688ce9d2", "HVMG2": "NOT_SUPPORTED" },
			"ap-northeast-3": { "HVM64": "ami-0d98120a9fb693f07", "HVMG2": "NOT_SUPPORTED" },
			"ap-southeast-1": { "HVM64": "ami-08569b978cc4dfa10", "HVMG2": "ami-0be9df32ae9f92309" },
			"ap-southeast-2": { "HVM64": "ami-09b42976632b27e9b", "HVMG2": "ami-0a9ce9fecc3d1daf8" },
			"ap-south-1": { "HVM64": "ami-0912f71e06545ad88", "HVMG2": "ami-097b15e89dbdcfcf4" },
			"us-east-2": { "HVM64": "ami-0b59bfac6be064b78", "HVMG2": "NOT_SUPPORTED" },
			"ca-central-1": { "HVM64": "ami-0b18956f", "HVMG2": "NOT_SUPPORTED" },
			"sa-east-1": { "HVM64": "ami-07b14488da8ea02a0", "HVMG2": "NOT_SUPPORTED" },
			"cn-north-1": { "HVM64": "ami-0a4eaf6c4454eda75", "HVMG2": "NOT_SUPPORTED" },
			"cn-northwest-1": { "HVM64": "ami-6b6a7d09", "HVMG2": "NOT_SUPPORTED" }
		}
	},

	"Conditions": {
		"DefInstanceProfile": {
			"Fn::Not": [
				{
					"Fn::Equals": [{ "Ref": "InstanceProfile" }, ""]
				}
			]
		}
	},

	"Resources": {
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": "10.0.0.0/16",
				"Tags": [
					{ "Key": "Application", "Value": { "Ref": "AWS::StackId" } },
					{ "Key": "Name", "Value": { "Ref": "WorkloadName" } }
				]
			}
		},

		"Subnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": { "Ref": "VPC" },
				"CidrBlock": "10.0.0.0/24",
				"Tags": [{ "Key": "Application", "Value": { "Ref": "AWS::StackId" } }]
			}
		},

		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{ "Key": "Application", "Value": { "Ref": "AWS::StackId" } }]
			}
		},

		"AttachGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": { "Ref": "VPC" },
				"InternetGatewayId": { "Ref": "InternetGateway" }
			}
		},

		"RouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": { "Ref": "VPC" },
				"Tags": [{ "Key": "Application", "Value": { "Ref": "AWS::StackId" } }]
			}
		},

		"Route": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "AttachGateway",
			"Properties": {
				"RouteTableId": { "Ref": "RouteTable" },
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": { "Ref": "InternetGateway" }
			}
		},

		"SubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": { "Ref": "Subnet" },
				"RouteTableId": { "Ref": "RouteTable" }
			}
		},

		"NetworkAcl": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": { "Ref": "VPC" },
				"Tags": [{ "Key": "Application", "Value": { "Ref": "AWS::StackId" } }]
			}
		},

		"InboundHTTPNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": { "Ref": "NetworkAcl" },
				"RuleNumber": "100",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": { "From": "80", "To": "80" }
			}
		},

		"InboundSSHNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": { "Ref": "NetworkAcl" },
				"RuleNumber": "101",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": { "From": "22", "To": "22" }
			}
		},

		"InboundResponsePortsNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": { "Ref": "NetworkAcl" },
				"RuleNumber": "102",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": { "From": "1024", "To": "65535" }
			}
		},

		"OutBoundHTTPNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": { "Ref": "NetworkAcl" },
				"RuleNumber": "100",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": { "From": "80", "To": "80" }
			}
		},

		"OutBoundHTTPSNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": { "Ref": "NetworkAcl" },
				"RuleNumber": "101",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": { "From": "443", "To": "443" }
			}
		},

		"OutBoundResponsePortsNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": { "Ref": "NetworkAcl" },
				"RuleNumber": "102",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": { "From": "1024", "To": "65535" }
			}
		},

		"SubnetNetworkAclAssociation": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": { "Ref": "Subnet" },
				"NetworkAclId": { "Ref": "NetworkAcl" }
			}
		},

		"InstanceSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"VpcId": { "Ref": "VPC" },
				"GroupDescription": "Enable SSH access via port 22 and web access via port 80",
				"SecurityGroupIngress": [
					{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": { "Ref": "SourceLocation" }
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "80",
						"ToPort": "80",
						"CidrIp": { "Ref": "SourceLocation" }
					}
				]
			}
		},

		"WebServerInstance1": {
			"Type": "AWS::EC2::Instance",
			"DependsOn": "AttachGateway",
			"Metadata": {
				"Comment": "Install a simple application",
				"AWS::CloudFormation::Init": {
					"config": {
						"packages": {
							"yum": {
								"httpd": []
							}
						},

						"files": {
							"/var/www/html/index.html": {
								"content": {
									"Fn::Join": [
										"\n",
										[
											"<img src=\"",
											{
												"Fn::FindInMap": ["Region2Examples", { "Ref": "AWS::Region" }, "Examples"]
											},
											"/cloudformation_graphic.png\" alt=\"AWS CloudFormation Logo\"/>",
											"<h1>Congratulations, you have successfully launched the AWS CloudFormation sample.</h1>"
										]
									]
								},
								"mode": "000644",
								"owner": "root",
								"group": "root"
							},

							"/etc/cfn/cfn-hup.conf": {
								"content": {
									"Fn::Join": [
										"",
										[
											"[main]\n",
											"stack=",
											{ "Ref": "AWS::StackId" },
											"\n",
											"region=",
											{ "Ref": "AWS::Region" },
											"\n"
										]
									]
								},
								"mode": "000400",
								"owner": "root",
								"group": "root"
							},

							"/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
								"content": {
									"Fn::Join": [
										"",
										[
											"[cfn-auto-reloader-hook]\n",
											"triggers=post.update\n",
											"path=Resources.WebServerInstance1.Metadata.AWS::CloudFormation::Init\n",
											"action=/opt/aws/bin/cfn-init -v ",
											"         --stack ",
											{ "Ref": "AWS::StackName" },
											"         --resource WebServerInstance1 ",
											"         --region ",
											{ "Ref": "AWS::Region" },
											"\n",
											"runas=root\n"
										]
									]
								},
								"mode": "000400",
								"owner": "root",
								"group": "root"
							}
						},

						"services": {
							"sysvinit": {
								"httpd": { "enabled": "true", "ensureRunning": "true" },
								"cfn-hup": {
									"enabled": "true",
									"ensureRunning": "true",
									"files": ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]
								}
							}
						}
					}
				}
			},
			"Properties": {
				"ImageId": {
					"Fn::FindInMap": [
						"AWSRegionArch2AMI",
						{ "Ref": "AWS::Region" },
						{ "Fn::FindInMap": ["AWSInstanceType2Arch", { "Ref": "InstanceTypeWeb" }, "Arch"] }
					]
				},
				"InstanceType": { "Ref": "InstanceTypeWeb" },
				"KeyName": { "Ref": "KeyName" },
				"Tags": [
					{ "Key": "Application", "Value": { "Ref": "AWS::StackId" } },
					{ "Key": "SSMManaged", "Value": "True" },
					{ "Key": "Confidentiality", "Value": "Public" },
					{ "Key": "Environment", "Value": "OELabIPM" },
					{ "Key": "InstanceRole", "Value": "WebServer" },
					{ "Key": "Patch Group", "Value": "Critical" },
					{ "Key": "Workload", "Value": { "Ref": "WorkloadName" } },
					{ "Key": "Name", "Value": { "Fn::Join": ["-", [{ "Ref": "WorkloadName" }, "Web1"]] } }
				],
				"NetworkInterfaces": [
					{
						"GroupSet": [{ "Ref": "InstanceSecurityGroup" }],
						"AssociatePublicIpAddress": "true",
						"DeviceIndex": "0",
						"DeleteOnTermination": "true",
						"SubnetId": { "Ref": "Subnet" }
					}
				],
				"IamInstanceProfile": {
					"Fn::If": ["DefInstanceProfile", { "Ref": "InstanceProfile" }, { "Ref": "AWS::NoValue" }]
				},
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"#!/bin/bash -xe\n",
								"yum update -y aws-cfn-bootstrap\n",

								"/opt/aws/bin/cfn-init -v ",
								"         --stack ",
								{ "Ref": "AWS::StackName" },
								"         --resource WebServerInstance1 ",
								"         --region ",
								{ "Ref": "AWS::Region" },
								"\n",

								"/opt/aws/bin/cfn-signal -e $? ",
								"         --stack ",
								{ "Ref": "AWS::StackName" },
								"         --resource WebServerInstance1 ",
								"         --region ",
								{ "Ref": "AWS::Region" },
								"\n"
							]
						]
					}
				}
			},
			"CreationPolicy": {
				"ResourceSignal": {
					"Timeout": "PT15M"
				}
			}
		},

		"WebServerInstance2": {
			"Type": "AWS::EC2::Instance",
			"DependsOn": "AttachGateway",
			"Metadata": {
				"Comment": "Install a simple application",
				"AWS::CloudFormation::Init": {
					"config": {
						"packages": {
							"yum": {
								"httpd": []
							}
						},

						"files": {
							"/var/www/html/index.html": {
								"content": {
									"Fn::Join": [
										"\n",
										[
											"<img src=\"",
											{
												"Fn::FindInMap": ["Region2Examples", { "Ref": "AWS::Region" }, "Examples"]
											},
											"/cloudformation_graphic.png\" alt=\"AWS CloudFormation Logo\"/>",
											"<h1>Congratulations, you have successfully launched the AWS CloudFormation sample.</h1>"
										]
									]
								},
								"mode": "000644",
								"owner": "root",
								"group": "root"
							},

							"/etc/cfn/cfn-hup.conf": {
								"content": {
									"Fn::Join": [
										"",
										[
											"[main]\n",
											"stack=",
											{ "Ref": "AWS::StackId" },
											"\n",
											"region=",
											{ "Ref": "AWS::Region" },
											"\n"
										]
									]
								},
								"mode": "000400",
								"owner": "root",
								"group": "root"
							},

							"/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
								"content": {
									"Fn::Join": [
										"",
										[
											"[cfn-auto-reloader-hook]\n",
											"triggers=post.update\n",
											"path=Resources.WebServerInstance2.Metadata.AWS::CloudFormation::Init\n",
											"action=/opt/aws/bin/cfn-init -v ",
											"         --stack ",
											{ "Ref": "AWS::StackName" },
											"         --resource WebServerInstance2 ",
											"         --region ",
											{ "Ref": "AWS::Region" },
											"\n",
											"runas=root\n"
										]
									]
								},
								"mode": "000400",
								"owner": "root",
								"group": "root"
							}
						},

						"services": {
							"sysvinit": {
								"httpd": { "enabled": "true", "ensureRunning": "true" },
								"cfn-hup": {
									"enabled": "true",
									"ensureRunning": "true",
									"files": ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]
								}
							}
						}
					}
				}
			},
			"Properties": {
				"ImageId": {
					"Fn::FindInMap": [
						"AWSRegionArch2AMI",
						{ "Ref": "AWS::Region" },
						{ "Fn::FindInMap": ["AWSInstanceType2Arch", { "Ref": "InstanceTypeWeb" }, "Arch"] }
					]
				},
				"InstanceType": { "Ref": "InstanceTypeWeb" },
				"KeyName": { "Ref": "KeyName" },
				"Tags": [
					{ "Key": "Application", "Value": { "Ref": "AWS::StackId" } },
					{ "Key": "SSMManaged", "Value": "True" },
					{ "Key": "Confidentiality", "Value": "Public" },
					{ "Key": "Environment", "Value": "OELabIPM" },
					{ "Key": "InstanceRole", "Value": "WebServer" },
					{ "Key": "Patch Group", "Value": "Critical" },
					{ "Key": "Workload", "Value": { "Ref": "WorkloadName" } },
					{ "Key": "Name", "Value": { "Fn::Join": ["-", [{ "Ref": "WorkloadName" }, "Web2"]] } }
				],
				"NetworkInterfaces": [
					{
						"GroupSet": [{ "Ref": "InstanceSecurityGroup" }],
						"AssociatePublicIpAddress": "true",
						"DeviceIndex": "0",
						"DeleteOnTermination": "true",
						"SubnetId": { "Ref": "Subnet" }
					}
				],
				"IamInstanceProfile": {
					"Fn::If": ["DefInstanceProfile", { "Ref": "InstanceProfile" }, { "Ref": "AWS::NoValue" }]
				},
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"#!/bin/bash -xe\n",
								"yum update -y aws-cfn-bootstrap\n",

								"/opt/aws/bin/cfn-init -v ",
								"         --stack ",
								{ "Ref": "AWS::StackName" },
								"         --resource WebServerInstance2 ",
								"         --region ",
								{ "Ref": "AWS::Region" },
								"\n",

								"/opt/aws/bin/cfn-signal -e $? ",
								"         --stack ",
								{ "Ref": "AWS::StackName" },
								"         --resource WebServerInstance2 ",
								"         --region ",
								{ "Ref": "AWS::Region" },
								"\n"
							]
						]
					}
				}
			},
			"CreationPolicy": {
				"ResourceSignal": {
					"Timeout": "PT15M"
				}
			}
		},

		"AppServer1": {
			"Type": "AWS::EC2::Instance",
			"Metadata": {
				"Comment": "Install a simple server"
			},
			"Properties": {
				"ImageId": {
					"Fn::FindInMap": [
						"AWSRegionArch2AMI",
						{ "Ref": "AWS::Region" },
						{ "Fn::FindInMap": ["AWSInstanceType2Arch", { "Ref": "InstanceTypeApp" }, "Arch"] }
					]
				},
				"InstanceType": { "Ref": "InstanceTypeApp" },
				"KeyName": { "Ref": "KeyName" },
				"Tags": [
					{ "Key": "Application", "Value": { "Ref": "AWS::StackId" } },
					{ "Key": "SSMManaged", "Value": "True" },
					{ "Key": "Confidentiality", "Value": "Public" },
					{ "Key": "Environment", "Value": "OELabIPM" },
					{ "Key": "InstanceRole", "Value": "AppServer" },
					{ "Key": "Patch Group", "Value": "Critical" },
					{ "Key": "Workload", "Value": { "Ref": "WorkloadName" } },
					{ "Key": "Name", "Value": { "Fn::Join": ["-", [{ "Ref": "WorkloadName" }, "App1"]] } }
				],
				"NetworkInterfaces": [
					{
						"GroupSet": [{ "Ref": "InstanceSecurityGroup" }],
						"AssociatePublicIpAddress": "true",
						"DeviceIndex": "0",
						"DeleteOnTermination": "true",
						"SubnetId": { "Ref": "Subnet" }
					}
				],
				"IamInstanceProfile": {
					"Fn::If": ["DefInstanceProfile", { "Ref": "InstanceProfile" }, { "Ref": "AWS::NoValue" }]
				},
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"#!/bin/bash -xe\n",
								"yum update -y aws-cfn-bootstrap\n",

								"/opt/aws/bin/cfn-init -v ",
								"         --stack ",
								{ "Ref": "AWS::StackName" },
								"         --resource AppServer1 ",
								"         --region ",
								{ "Ref": "AWS::Region" },
								"\n",

								"/opt/aws/bin/cfn-signal -e $? ",
								"         --stack ",
								{ "Ref": "AWS::StackName" },
								"         --resource AppServer1 ",
								"         --region ",
								{ "Ref": "AWS::Region" },
								"\n"
							]
						]
					}
				}
			},
			"CreationPolicy": {
				"ResourceSignal": {
					"Timeout": "PT15M"
				}
			}
		},

		"AppServer2": {
			"Type": "AWS::EC2::Instance",
			"Metadata": {
				"Comment": "Install a simple server"
			},
			"Properties": {
				"ImageId": {
					"Fn::FindInMap": [
						"AWSRegionArch2AMI",
						{ "Ref": "AWS::Region" },
						{ "Fn::FindInMap": ["AWSInstanceType2Arch", { "Ref": "InstanceTypeApp" }, "Arch"] }
					]
				},
				"InstanceType": { "Ref": "InstanceTypeApp" },
				"KeyName": { "Ref": "KeyName" },
				"Tags": [
					{ "Key": "Application", "Value": { "Ref": "AWS::StackId" } },
					{ "Key": "SSMManaged", "Value": "True" },
					{ "Key": "Confidentiality", "Value": "Public" },
					{ "Key": "Environment", "Value": "OELabIPM" },
					{ "Key": "InstanceRole", "Value": "AppServer" },
					{ "Key": "Patch Group", "Value": "Critical" },
					{ "Key": "Workload", "Value": { "Ref": "WorkloadName" } },
					{ "Key": "Name", "Value": { "Fn::Join": ["-", [{ "Ref": "WorkloadName" }, "App2"]] } }
				],
				"NetworkInterfaces": [
					{
						"GroupSet": [{ "Ref": "InstanceSecurityGroup" }],
						"AssociatePublicIpAddress": "true",
						"DeviceIndex": "0",
						"DeleteOnTermination": "true",
						"SubnetId": { "Ref": "Subnet" }
					}
				],
				"IamInstanceProfile": {
					"Fn::If": ["DefInstanceProfile", { "Ref": "InstanceProfile" }, { "Ref": "AWS::NoValue" }]
				},
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"#!/bin/bash -xe\n",
								"yum update -y aws-cfn-bootstrap\n",

								"/opt/aws/bin/cfn-init -v ",
								"         --stack ",
								{ "Ref": "AWS::StackName" },
								"         --resource AppServer2 ",
								"         --region ",
								{ "Ref": "AWS::Region" },
								"\n",

								"/opt/aws/bin/cfn-signal -e $? ",
								"         --stack ",
								{ "Ref": "AWS::StackName" },
								"         --resource AppServer2 ",
								"         --region ",
								{ "Ref": "AWS::Region" },
								"\n"
							]
						]
					}
				}
			},
			"CreationPolicy": {
				"ResourceSignal": {
					"Timeout": "PT15M"
				}
			}
		}
	},

	"Outputs": {
		"PrimaryURL": {
			"Value": {
				"Fn::Join": ["", ["http://", { "Fn::GetAtt": ["WebServerInstance1", "PublicIp"] }]]
			},
			"Description": "Newly created application URL"
		},
		"SecondaryURL": {
			"Value": {
				"Fn::Join": ["", ["http://", { "Fn::GetAtt": ["WebServerInstance2", "PublicIp"] }]]
			},
			"Description": "Newly created application URL"
		}
	}
}
